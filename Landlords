import random

# 定义扑克牌
suits = ['♠', '♥', '♦', '♣']
ranks = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A']
cards = [rank + suit for suit in suits for rank in ranks]

# 洗牌
random.shuffle(cards)

# 发牌
player1_hand = cards[:17]
player2_hand = cards[17:34]
player3_hand = cards[34:51]
landlord_hand = cards[51:]

# 出牌函数
def play_card(hand, last_play=None):
    if last_play is None:
        return hand.pop()
    else:
        # 根据游戏规则选择出牌
        valid_cards = [card for card in hand if card > last_play]
        if valid_cards:
            return hand.pop(hand.index(max(valid_cards)))
        else:
            return None

# 游戏开始
print("地主的手牌:", landlord_hand)
last_play = None  # 上一手牌
current_player = 1  # 当前玩家

while True:
    if current_player == 1:
        print("玩家1的手牌:", player1_hand)
        card = play_card(player1_hand, last_play)
        if card is None:
            print("玩家1要不起，轮到玩家2出牌")
            current_player = 2
        else:
            print("玩家1出牌:", card)
            last_play = card
            if not player1_hand:
                print("玩家1获胜！")
                break
    elif current_player == 2:
        print("玩家2的手牌:", player2_hand)
        card = play_card(player2_hand, last_play)
        if card is None:
            print("玩家2要不起，轮到玩家3出牌")
            current_player = 3
        else:
            print("玩家2出牌:", card)
            last_play = card
            if not player2_hand:
                print("玩家2获胜！")
                break
    else:
        print("玩家3的手牌:", player3_hand)
        card = play_card(player3_hand, last_play)
        if card is None:
            print("玩家3要不起，轮到玩家1出牌")
            current_player = 1
        else:
            print("玩家3出牌:", card)
            last_play = card
            if not player3_hand:
                print("玩家3获胜！")
                break
